//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notes", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Notes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string Note_IDField;
        
        private string SubjectField;
        
        private System.DateTime Time_OfCreationField;
        
        private string User_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note_ID {
            get {
                return this.Note_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Note_IDField, value) != true)) {
                    this.Note_IDField = value;
                    this.RaisePropertyChanged("Note_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time_OfCreation {
            get {
                return this.Time_OfCreationField;
            }
            set {
                if ((this.Time_OfCreationField.Equals(value) != true)) {
                    this.Time_OfCreationField = value;
                    this.RaisePropertyChanged("Time_OfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityPacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class IdentityPacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Contact_IDField;
        
        private string Content_IDField;
        
        private System.Collections.Generic.List<string> ErrorsField;
        
        private bool HasErrorField;
        
        private string Process_IDField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account SiteUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact_ID {
            get {
                return this.Contact_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact_IDField, value) != true)) {
                    this.Contact_IDField = value;
                    this.RaisePropertyChanged("Contact_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content_ID {
            get {
                return this.Content_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Content_IDField, value) != true)) {
                    this.Content_IDField = value;
                    this.RaisePropertyChanged("Content_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasError {
            get {
                return this.HasErrorField;
            }
            set {
                if ((this.HasErrorField.Equals(value) != true)) {
                    this.HasErrorField = value;
                    this.RaisePropertyChanged("HasError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Process_ID {
            get {
                return this.Process_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Process_IDField, value) != true)) {
                    this.Process_IDField = value;
                    this.RaisePropertyChanged("Process_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account SiteUser {
            get {
                return this.SiteUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteUserField, value) != true)) {
                    this.SiteUserField = value;
                    this.RaisePropertyChanged("SiteUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] AvatarField;
        
        private string Display_NameField;
        
        private string EmailField;
        
        private string First_NameField;
        
        private string HomeField;
        
        private string Last_NameField;
        
        private string MobileField;
        
        private string PasswordField;
        
        private string User_IDField;
        
        private string UsernameField;
        
        private string WorkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Display_Name {
            get {
                return this.Display_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Display_NameField, value) != true)) {
                    this.Display_NameField = value;
                    this.RaisePropertyChanged("Display_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Home {
            get {
                return this.HomeField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeField, value) != true)) {
                    this.HomeField = value;
                    this.RaisePropertyChanged("Home");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_Name {
            get {
                return this.Last_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_NameField, value) != true)) {
                    this.Last_NameField = value;
                    this.RaisePropertyChanged("Last_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Work {
            get {
                return this.WorkField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkField, value) != true)) {
                    this.WorkField = value;
                    this.RaisePropertyChanged("Work");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotesResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class NotesResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes _NoteField;
        
        private System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes> _NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes _Note {
            get {
                return this._NoteField;
            }
            set {
                if ((object.ReferenceEquals(this._NoteField, value) != true)) {
                    this._NoteField = value;
                    this.RaisePropertyChanged("_Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes> _Notes {
            get {
                return this._NotesField;
            }
            set {
                if ((object.ReferenceEquals(this._NotesField, value) != true)) {
                    this._NotesField = value;
                    this.RaisePropertyChanged("_Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Passwords", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Passwords : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Password_DescriptionField;
        
        private string Password_HashedField;
        
        private string Password_IDField;
        
        private System.DateTime Time_OfCreationField;
        
        private string User_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_Description {
            get {
                return this.Password_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Password_DescriptionField, value) != true)) {
                    this.Password_DescriptionField = value;
                    this.RaisePropertyChanged("Password_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_Hashed {
            get {
                return this.Password_HashedField;
            }
            set {
                if ((object.ReferenceEquals(this.Password_HashedField, value) != true)) {
                    this.Password_HashedField = value;
                    this.RaisePropertyChanged("Password_Hashed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password_ID {
            get {
                return this.Password_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Password_IDField, value) != true)) {
                    this.Password_IDField = value;
                    this.RaisePropertyChanged("Password_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time_OfCreation {
            get {
                return this.Time_OfCreationField;
            }
            set {
                if ((this.Time_OfCreationField.Equals(value) != true)) {
                    this.Time_OfCreationField = value;
                    this.RaisePropertyChanged("Time_OfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordsResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class PasswordsResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords _PasswordField;
        
        private System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords> _PasswordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords _Password {
            get {
                return this._PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this._PasswordField, value) != true)) {
                    this._PasswordField = value;
                    this.RaisePropertyChanged("_Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords> _Passwords {
            get {
                return this._PasswordsField;
            }
            set {
                if ((object.ReferenceEquals(this._PasswordsField, value) != true)) {
                    this._PasswordsField = value;
                    this.RaisePropertyChanged("_Passwords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class AccountResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account _AccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account _Account {
            get {
                return this._AccountField;
            }
            set {
                if ((object.ReferenceEquals(this._AccountField, value) != true)) {
                    this._AccountField = value;
                    this.RaisePropertyChanged("_Account");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contacts", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Contacts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> Address_ID_RefField;
        
        private byte[] AvatarField;
        
        private string Contact_IDField;
        
        private string EmailField;
        
        private string First_NameField;
        
        private string HomeField;
        
        private string Last_NameField;
        
        private string MobileField;
        
        private string SalutationField;
        
        private string SiteUser_DisplayNameField;
        
        private string User_IDField;
        
        private string WorkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Address_ID_Ref {
            get {
                return this.Address_ID_RefField;
            }
            set {
                if ((this.Address_ID_RefField.Equals(value) != true)) {
                    this.Address_ID_RefField = value;
                    this.RaisePropertyChanged("Address_ID_Ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact_ID {
            get {
                return this.Contact_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact_IDField, value) != true)) {
                    this.Contact_IDField = value;
                    this.RaisePropertyChanged("Contact_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Home {
            get {
                return this.HomeField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeField, value) != true)) {
                    this.HomeField = value;
                    this.RaisePropertyChanged("Home");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_Name {
            get {
                return this.Last_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_NameField, value) != true)) {
                    this.Last_NameField = value;
                    this.RaisePropertyChanged("Last_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteUser_DisplayName {
            get {
                return this.SiteUser_DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteUser_DisplayNameField, value) != true)) {
                    this.SiteUser_DisplayNameField = value;
                    this.RaisePropertyChanged("SiteUser_DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Work {
            get {
                return this.WorkField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkField, value) != true)) {
                    this.WorkField = value;
                    this.RaisePropertyChanged("Work");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactsResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class ContactsResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts _ContactField;
        
        private System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts> _ContactsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts _Contact {
            get {
                return this._ContactField;
            }
            set {
                if ((object.ReferenceEquals(this._ContactField, value) != true)) {
                    this._ContactField = value;
                    this.RaisePropertyChanged("_Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts> _Contacts {
            get {
                return this._ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this._ContactsField, value) != true)) {
                    this._ContactsField = value;
                    this.RaisePropertyChanged("_Contacts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Music", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Music : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ArtistField;
        
        private System.DateTime Date_OfCreationField;
        
        private System.TimeSpan DurationField;
        
        private System.TimeSpan LengthOfMusicField;
        
        private byte[] Music_ContentField;
        
        private string Music_IDField;
        
        private string Music_NameField;
        
        private System.DateTime ReleaseDateField;
        
        private string User_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_OfCreation {
            get {
                return this.Date_OfCreationField;
            }
            set {
                if ((this.Date_OfCreationField.Equals(value) != true)) {
                    this.Date_OfCreationField = value;
                    this.RaisePropertyChanged("Date_OfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan LengthOfMusic {
            get {
                return this.LengthOfMusicField;
            }
            set {
                if ((this.LengthOfMusicField.Equals(value) != true)) {
                    this.LengthOfMusicField = value;
                    this.RaisePropertyChanged("LengthOfMusic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Music_Content {
            get {
                return this.Music_ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.Music_ContentField, value) != true)) {
                    this.Music_ContentField = value;
                    this.RaisePropertyChanged("Music_Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Music_ID {
            get {
                return this.Music_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Music_IDField, value) != true)) {
                    this.Music_IDField = value;
                    this.RaisePropertyChanged("Music_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Music_Name {
            get {
                return this.Music_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Music_NameField, value) != true)) {
                    this.Music_NameField = value;
                    this.RaisePropertyChanged("Music_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MusicResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class MusicResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music _MusicField;
        
        private System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music> _MusicsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music _Music {
            get {
                return this._MusicField;
            }
            set {
                if ((object.ReferenceEquals(this._MusicField, value) != true)) {
                    this._MusicField = value;
                    this.RaisePropertyChanged("_Music");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music> _Musics {
            get {
                return this._MusicsField;
            }
            set {
                if ((object.ReferenceEquals(this._MusicsField, value) != true)) {
                    this._MusicsField = value;
                    this.RaisePropertyChanged("_Musics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photos", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data")]
    public partial class Photos : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] PhotoField;
        
        private string Photo_IDField;
        
        private string Photo_MIMEField;
        
        private System.DateTime Time_OfCreationField;
        
        private string User_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo_ID {
            get {
                return this.Photo_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Photo_IDField, value) != true)) {
                    this.Photo_IDField = value;
                    this.RaisePropertyChanged("Photo_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo_MIME {
            get {
                return this.Photo_MIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.Photo_MIMEField, value) != true)) {
                    this.Photo_MIMEField = value;
                    this.RaisePropertyChanged("Photo_MIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time_OfCreation {
            get {
                return this.Time_OfCreationField;
            }
            set {
                if ((this.Time_OfCreationField.Equals(value) != true)) {
                    this.Time_OfCreationField = value;
                    this.RaisePropertyChanged("Time_OfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotosResponsePacket", Namespace="http://schemas.datacontract.org/2004/07/Cross.DataVault.Contracts.Data.Response")]
    public partial class PhotosResponsePacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacketField;
        
        private Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos _PhotoField;
        
        private System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos> _PhotosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket ResponsePacket {
            get {
                return this.ResponsePacketField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsePacketField, value) != true)) {
                    this.ResponsePacketField = value;
                    this.RaisePropertyChanged("ResponsePacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos _Photo {
            get {
                return this._PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this._PhotoField, value) != true)) {
                    this._PhotoField = value;
                    this.RaisePropertyChanged("_Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos> _Photos {
            get {
                return this._PhotosField;
            }
            set {
                if ((object.ReferenceEquals(this._PhotosField, value) != true)) {
                    this._PhotosField = value;
                    this.RaisePropertyChanged("_Photos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataVaultCloudService.IDataVaultService")]
    public interface IDataVaultService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/IsServiceAvailable", ReplyAction="http://tempuri.org/IDataVaultService/IsServiceAvailableResponse")]
        System.IAsyncResult BeginIsServiceAvailable(System.AsyncCallback callback, object asyncState);
        
        bool EndIsServiceAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddNote", ReplyAction="http://tempuri.org/IDataVaultService/AddNoteResponse")]
        System.IAsyncResult BeginAddNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/DeleteNote_ByID", ReplyAction="http://tempuri.org/IDataVaultService/DeleteNote_ByIDResponse")]
        System.IAsyncResult BeginDeleteNote_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeleteNote_ByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/DeleteNotes_ByIDs", ReplyAction="http://tempuri.org/IDataVaultService/DeleteNotes_ByIDsResponse")]
        System.IAsyncResult BeginDeleteNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeleteNotes_ByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetNote_ByID", ReplyAction="http://tempuri.org/IDataVaultService/GetNote_ByIDResponse")]
        System.IAsyncResult BeginGetNote_ByID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNote_ByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetNotes_ByIDs", ReplyAction="http://tempuri.org/IDataVaultService/GetNotes_ByIDsResponse")]
        System.IAsyncResult BeginGetNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNotes_ByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetNotes_ByUserID", ReplyAction="http://tempuri.org/IDataVaultService/GetNotes_ByUserIDResponse")]
        System.IAsyncResult BeginGetNotes_ByUserID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNotes_ByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/UpdateNote", ReplyAction="http://tempuri.org/IDataVaultService/UpdateNoteResponse")]
        System.IAsyncResult BeginUpdateNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdateNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/UpdateNotes", ReplyAction="http://tempuri.org/IDataVaultService/UpdateNotesResponse")]
        System.IAsyncResult BeginUpdateNotes(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdateNotes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddPassword", ReplyAction="http://tempuri.org/IDataVaultService/AddPasswordResponse")]
        System.IAsyncResult BeginAddPassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/DeletePassword_ByID", ReplyAction="http://tempuri.org/IDataVaultService/DeletePassword_ByIDResponse")]
        System.IAsyncResult BeginDeletePassword_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeletePassword_ByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/DeletePasswords_ByIDs", ReplyAction="http://tempuri.org/IDataVaultService/DeletePasswords_ByIDsResponse")]
        System.IAsyncResult BeginDeletePasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeletePasswords_ByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/UpdatePassword", ReplyAction="http://tempuri.org/IDataVaultService/UpdatePasswordResponse")]
        System.IAsyncResult BeginUpdatePassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdatePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetPasswords_ByUserID", ReplyAction="http://tempuri.org/IDataVaultService/GetPasswords_ByUserIDResponse")]
        System.IAsyncResult BeginGetPasswords_ByUserID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPasswords_ByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetPassword_ByID", ReplyAction="http://tempuri.org/IDataVaultService/GetPassword_ByIDResponse")]
        System.IAsyncResult BeginGetPassword_ByID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPassword_ByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/GetPasswords_ByIDs", ReplyAction="http://tempuri.org/IDataVaultService/GetPasswords_ByIDsResponse")]
        System.IAsyncResult BeginGetPasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPasswords_ByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddAccount", ReplyAction="http://tempuri.org/IDataVaultService/AddAccountResponse")]
        System.IAsyncResult BeginAddAccount(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_Account_ViaAuthentication", ReplyAction="http://tempuri.org/IDataVaultService/Get_Account_ViaAuthenticationResponse")]
        System.IAsyncResult BeginGet_Account_ViaAuthentication(string username, string password, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket EndGet_Account_ViaAuthentication(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddContact", ReplyAction="http://tempuri.org/IDataVaultService/AddContactResponse")]
        System.IAsyncResult BeginAddContact(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Delete_ContactByID", ReplyAction="http://tempuri.org/IDataVaultService/Delete_ContactByIDResponse")]
        System.IAsyncResult BeginDelete_ContactByID(string id, string user_id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_ContactByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Delete_ContactsByIDs", ReplyAction="http://tempuri.org/IDataVaultService/Delete_ContactsByIDsResponse")]
        System.IAsyncResult BeginDelete_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_ContactsByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_ContactByID", ReplyAction="http://tempuri.org/IDataVaultService/Get_ContactByIDResponse")]
        System.IAsyncResult BeginGet_ContactByID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_ContactsByUserID", ReplyAction="http://tempuri.org/IDataVaultService/Get_ContactsByUserIDResponse")]
        System.IAsyncResult BeginGet_ContactsByUserID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactsByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_ContactsByIDs", ReplyAction="http://tempuri.org/IDataVaultService/Get_ContactsByIDsResponse")]
        System.IAsyncResult BeginGet_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactsByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddMusic", ReplyAction="http://tempuri.org/IDataVaultService/AddMusicResponse")]
        System.IAsyncResult BeginAddMusic(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddMusic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_MusicByID", ReplyAction="http://tempuri.org/IDataVaultService/Get_MusicByIDResponse")]
        System.IAsyncResult BeginGet_MusicByID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_MusicByUserID", ReplyAction="http://tempuri.org/IDataVaultService/Get_MusicByUserIDResponse")]
        System.IAsyncResult BeginGet_MusicByUserID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_MusicByIDs", ReplyAction="http://tempuri.org/IDataVaultService/Get_MusicByIDsResponse")]
        System.IAsyncResult BeginGet_MusicByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/AddPhoto", ReplyAction="http://tempuri.org/IDataVaultService/AddPhotoResponse")]
        System.IAsyncResult BeginAddPhoto(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Delete_PhotoByID", ReplyAction="http://tempuri.org/IDataVaultService/Delete_PhotoByIDResponse")]
        System.IAsyncResult BeginDelete_PhotoByID(string id, string user_id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_PhotoByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Delete_PhotosByIDs", ReplyAction="http://tempuri.org/IDataVaultService/Delete_PhotosByIDsResponse")]
        System.IAsyncResult BeginDelete_PhotosByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_PhotosByIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_PhotoByID", ReplyAction="http://tempuri.org/IDataVaultService/Get_PhotoByIDResponse")]
        System.IAsyncResult BeginGet_PhotoByID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_PhotoByUserID", ReplyAction="http://tempuri.org/IDataVaultService/Get_PhotoByUserIDResponse")]
        System.IAsyncResult BeginGet_PhotoByUserID(string id, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataVaultService/Get_PhotoByIDs", ReplyAction="http://tempuri.org/IDataVaultService/Get_PhotoByIDsResponse")]
        System.IAsyncResult BeginGet_PhotoByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState);
        
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByIDs(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataVaultServiceChannel : Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsServiceAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsServiceAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteNote_ByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteNote_ByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteNotes_ByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteNotes_ByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNote_ByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNote_ByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNotes_ByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNotes_ByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNotes_ByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNotes_ByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePassword_ByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePassword_ByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePasswords_ByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePasswords_ByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPasswords_ByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPasswords_ByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPassword_ByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPassword_ByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPasswords_ByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPasswords_ByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_Account_ViaAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_Account_ViaAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Delete_ContactByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Delete_ContactByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Delete_ContactsByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Delete_ContactsByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_ContactByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_ContactByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_ContactsByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_ContactsByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_ContactsByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_ContactsByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddMusicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddMusicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_MusicByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_MusicByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_MusicByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_MusicByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_MusicByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_MusicByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Delete_PhotoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Delete_PhotoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Delete_PhotosByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Delete_PhotosByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_PhotoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_PhotoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_PhotoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_PhotoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_PhotoByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_PhotoByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataVaultServiceClient : System.ServiceModel.ClientBase<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService>, Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService {
        
        private BeginOperationDelegate onBeginIsServiceAvailableDelegate;
        
        private EndOperationDelegate onEndIsServiceAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onIsServiceAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNoteDelegate;
        
        private EndOperationDelegate onEndAddNoteDelegate;
        
        private System.Threading.SendOrPostCallback onAddNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNote_ByIDDelegate;
        
        private EndOperationDelegate onEndDeleteNote_ByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNote_ByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNotes_ByIDsDelegate;
        
        private EndOperationDelegate onEndDeleteNotes_ByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNotes_ByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNote_ByIDDelegate;
        
        private EndOperationDelegate onEndGetNote_ByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNote_ByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNotes_ByIDsDelegate;
        
        private EndOperationDelegate onEndGetNotes_ByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNotes_ByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNotes_ByUserIDDelegate;
        
        private EndOperationDelegate onEndGetNotes_ByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNotes_ByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNoteDelegate;
        
        private EndOperationDelegate onEndUpdateNoteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNotesDelegate;
        
        private EndOperationDelegate onEndUpdateNotesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPasswordDelegate;
        
        private EndOperationDelegate onEndAddPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onAddPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePassword_ByIDDelegate;
        
        private EndOperationDelegate onEndDeletePassword_ByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePassword_ByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePasswords_ByIDsDelegate;
        
        private EndOperationDelegate onEndDeletePasswords_ByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePasswords_ByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePasswordDelegate;
        
        private EndOperationDelegate onEndUpdatePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPasswords_ByUserIDDelegate;
        
        private EndOperationDelegate onEndGetPasswords_ByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPasswords_ByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPassword_ByIDDelegate;
        
        private EndOperationDelegate onEndGetPassword_ByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPassword_ByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPasswords_ByIDsDelegate;
        
        private EndOperationDelegate onEndGetPasswords_ByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPasswords_ByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAccountDelegate;
        
        private EndOperationDelegate onEndAddAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_Account_ViaAuthenticationDelegate;
        
        private EndOperationDelegate onEndGet_Account_ViaAuthenticationDelegate;
        
        private System.Threading.SendOrPostCallback onGet_Account_ViaAuthenticationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddContactDelegate;
        
        private EndOperationDelegate onEndAddContactDelegate;
        
        private System.Threading.SendOrPostCallback onAddContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelete_ContactByIDDelegate;
        
        private EndOperationDelegate onEndDelete_ContactByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDelete_ContactByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelete_ContactsByIDsDelegate;
        
        private EndOperationDelegate onEndDelete_ContactsByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onDelete_ContactsByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_ContactByIDDelegate;
        
        private EndOperationDelegate onEndGet_ContactByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_ContactByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_ContactsByUserIDDelegate;
        
        private EndOperationDelegate onEndGet_ContactsByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_ContactsByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_ContactsByIDsDelegate;
        
        private EndOperationDelegate onEndGet_ContactsByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGet_ContactsByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddMusicDelegate;
        
        private EndOperationDelegate onEndAddMusicDelegate;
        
        private System.Threading.SendOrPostCallback onAddMusicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_MusicByIDDelegate;
        
        private EndOperationDelegate onEndGet_MusicByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_MusicByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_MusicByUserIDDelegate;
        
        private EndOperationDelegate onEndGet_MusicByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_MusicByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_MusicByIDsDelegate;
        
        private EndOperationDelegate onEndGet_MusicByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGet_MusicByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPhotoDelegate;
        
        private EndOperationDelegate onEndAddPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onAddPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelete_PhotoByIDDelegate;
        
        private EndOperationDelegate onEndDelete_PhotoByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDelete_PhotoByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelete_PhotosByIDsDelegate;
        
        private EndOperationDelegate onEndDelete_PhotosByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onDelete_PhotosByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_PhotoByIDDelegate;
        
        private EndOperationDelegate onEndGet_PhotoByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_PhotoByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_PhotoByUserIDDelegate;
        
        private EndOperationDelegate onEndGet_PhotoByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGet_PhotoByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_PhotoByIDsDelegate;
        
        private EndOperationDelegate onEndGet_PhotoByIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGet_PhotoByIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataVaultServiceClient() : 
                base(DataVaultServiceClient.GetDefaultBinding(), DataVaultServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public DataVaultServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(DataVaultServiceClient.GetBindingForEndpoint(endpointConfiguration), DataVaultServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public DataVaultServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataVaultServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public DataVaultServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataVaultServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public DataVaultServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<IsServiceAvailableCompletedEventArgs> IsServiceAvailableCompleted;
        
        public event System.EventHandler<AddNoteCompletedEventArgs> AddNoteCompleted;
        
        public event System.EventHandler<DeleteNote_ByIDCompletedEventArgs> DeleteNote_ByIDCompleted;
        
        public event System.EventHandler<DeleteNotes_ByIDsCompletedEventArgs> DeleteNotes_ByIDsCompleted;
        
        public event System.EventHandler<GetNote_ByIDCompletedEventArgs> GetNote_ByIDCompleted;
        
        public event System.EventHandler<GetNotes_ByIDsCompletedEventArgs> GetNotes_ByIDsCompleted;
        
        public event System.EventHandler<GetNotes_ByUserIDCompletedEventArgs> GetNotes_ByUserIDCompleted;
        
        public event System.EventHandler<UpdateNoteCompletedEventArgs> UpdateNoteCompleted;
        
        public event System.EventHandler<UpdateNotesCompletedEventArgs> UpdateNotesCompleted;
        
        public event System.EventHandler<AddPasswordCompletedEventArgs> AddPasswordCompleted;
        
        public event System.EventHandler<DeletePassword_ByIDCompletedEventArgs> DeletePassword_ByIDCompleted;
        
        public event System.EventHandler<DeletePasswords_ByIDsCompletedEventArgs> DeletePasswords_ByIDsCompleted;
        
        public event System.EventHandler<UpdatePasswordCompletedEventArgs> UpdatePasswordCompleted;
        
        public event System.EventHandler<GetPasswords_ByUserIDCompletedEventArgs> GetPasswords_ByUserIDCompleted;
        
        public event System.EventHandler<GetPassword_ByIDCompletedEventArgs> GetPassword_ByIDCompleted;
        
        public event System.EventHandler<GetPasswords_ByIDsCompletedEventArgs> GetPasswords_ByIDsCompleted;
        
        public event System.EventHandler<AddAccountCompletedEventArgs> AddAccountCompleted;
        
        public event System.EventHandler<Get_Account_ViaAuthenticationCompletedEventArgs> Get_Account_ViaAuthenticationCompleted;
        
        public event System.EventHandler<AddContactCompletedEventArgs> AddContactCompleted;
        
        public event System.EventHandler<Delete_ContactByIDCompletedEventArgs> Delete_ContactByIDCompleted;
        
        public event System.EventHandler<Delete_ContactsByIDsCompletedEventArgs> Delete_ContactsByIDsCompleted;
        
        public event System.EventHandler<Get_ContactByIDCompletedEventArgs> Get_ContactByIDCompleted;
        
        public event System.EventHandler<Get_ContactsByUserIDCompletedEventArgs> Get_ContactsByUserIDCompleted;
        
        public event System.EventHandler<Get_ContactsByIDsCompletedEventArgs> Get_ContactsByIDsCompleted;
        
        public event System.EventHandler<AddMusicCompletedEventArgs> AddMusicCompleted;
        
        public event System.EventHandler<Get_MusicByIDCompletedEventArgs> Get_MusicByIDCompleted;
        
        public event System.EventHandler<Get_MusicByUserIDCompletedEventArgs> Get_MusicByUserIDCompleted;
        
        public event System.EventHandler<Get_MusicByIDsCompletedEventArgs> Get_MusicByIDsCompleted;
        
        public event System.EventHandler<AddPhotoCompletedEventArgs> AddPhotoCompleted;
        
        public event System.EventHandler<Delete_PhotoByIDCompletedEventArgs> Delete_PhotoByIDCompleted;
        
        public event System.EventHandler<Delete_PhotosByIDsCompletedEventArgs> Delete_PhotosByIDsCompleted;
        
        public event System.EventHandler<Get_PhotoByIDCompletedEventArgs> Get_PhotoByIDCompleted;
        
        public event System.EventHandler<Get_PhotoByUserIDCompletedEventArgs> Get_PhotoByUserIDCompleted;
        
        public event System.EventHandler<Get_PhotoByIDsCompletedEventArgs> Get_PhotoByIDsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginIsServiceAvailable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsServiceAvailable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndIsServiceAvailable(System.IAsyncResult result) {
            return base.Channel.EndIsServiceAvailable(result);
        }
        
        private System.IAsyncResult OnBeginIsServiceAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginIsServiceAvailable(callback, asyncState);
        }
        
        private object[] OnEndIsServiceAvailable(System.IAsyncResult result) {
            bool retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndIsServiceAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsServiceAvailableCompleted(object state) {
            if ((this.IsServiceAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsServiceAvailableCompleted(this, new IsServiceAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsServiceAvailableAsync() {
            this.IsServiceAvailableAsync(null);
        }
        
        public void IsServiceAvailableAsync(object userState) {
            if ((this.onBeginIsServiceAvailableDelegate == null)) {
                this.onBeginIsServiceAvailableDelegate = new BeginOperationDelegate(this.OnBeginIsServiceAvailable);
            }
            if ((this.onEndIsServiceAvailableDelegate == null)) {
                this.onEndIsServiceAvailableDelegate = new EndOperationDelegate(this.OnEndIsServiceAvailable);
            }
            if ((this.onIsServiceAvailableCompletedDelegate == null)) {
                this.onIsServiceAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsServiceAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginIsServiceAvailableDelegate, null, this.onEndIsServiceAvailableDelegate, this.onIsServiceAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNote(note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddNote(System.IAsyncResult result) {
            return base.Channel.EndAddNote(result);
        }
        
        private System.IAsyncResult OnBeginAddNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddNote(note, callback, asyncState);
        }
        
        private object[] OnEndAddNote(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNoteCompleted(object state) {
            if ((this.AddNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNoteCompleted(this, new AddNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNoteAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note) {
            this.AddNoteAsync(note, null);
        }
        
        public void AddNoteAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, object userState) {
            if ((this.onBeginAddNoteDelegate == null)) {
                this.onBeginAddNoteDelegate = new BeginOperationDelegate(this.OnBeginAddNote);
            }
            if ((this.onEndAddNoteDelegate == null)) {
                this.onEndAddNoteDelegate = new EndOperationDelegate(this.OnEndAddNote);
            }
            if ((this.onAddNoteCompletedDelegate == null)) {
                this.onAddNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNoteCompleted);
            }
            base.InvokeAsync(this.onBeginAddNoteDelegate, new object[] {
                        note}, this.onEndAddNoteDelegate, this.onAddNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDeleteNote_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNote_ByID(id, user_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDeleteNote_ByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteNote_ByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNote_ByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string user_id = ((string)(inValues[1]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDeleteNote_ByID(id, user_id, callback, asyncState);
        }
        
        private object[] OnEndDeleteNote_ByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDeleteNote_ByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteNote_ByIDCompleted(object state) {
            if ((this.DeleteNote_ByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNote_ByIDCompleted(this, new DeleteNote_ByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNote_ByIDAsync(string id, string user_id) {
            this.DeleteNote_ByIDAsync(id, user_id, null);
        }
        
        public void DeleteNote_ByIDAsync(string id, string user_id, object userState) {
            if ((this.onBeginDeleteNote_ByIDDelegate == null)) {
                this.onBeginDeleteNote_ByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteNote_ByID);
            }
            if ((this.onEndDeleteNote_ByIDDelegate == null)) {
                this.onEndDeleteNote_ByIDDelegate = new EndOperationDelegate(this.OnEndDeleteNote_ByID);
            }
            if ((this.onDeleteNote_ByIDCompletedDelegate == null)) {
                this.onDeleteNote_ByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNote_ByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNote_ByIDDelegate, new object[] {
                        id,
                        user_id}, this.onEndDeleteNote_ByIDDelegate, this.onDeleteNote_ByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDeleteNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNotes_ByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDeleteNotes_ByIDs(System.IAsyncResult result) {
            return base.Channel.EndDeleteNotes_ByIDs(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNotes_ByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDeleteNotes_ByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndDeleteNotes_ByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDeleteNotes_ByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteNotes_ByIDsCompleted(object state) {
            if ((this.DeleteNotes_ByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNotes_ByIDsCompleted(this, new DeleteNotes_ByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNotes_ByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.DeleteNotes_ByIDsAsync(ids, null);
        }
        
        public void DeleteNotes_ByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginDeleteNotes_ByIDsDelegate == null)) {
                this.onBeginDeleteNotes_ByIDsDelegate = new BeginOperationDelegate(this.OnBeginDeleteNotes_ByIDs);
            }
            if ((this.onEndDeleteNotes_ByIDsDelegate == null)) {
                this.onEndDeleteNotes_ByIDsDelegate = new EndOperationDelegate(this.OnEndDeleteNotes_ByIDs);
            }
            if ((this.onDeleteNotes_ByIDsCompletedDelegate == null)) {
                this.onDeleteNotes_ByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNotes_ByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNotes_ByIDsDelegate, new object[] {
                        ids}, this.onEndDeleteNotes_ByIDsDelegate, this.onDeleteNotes_ByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetNote_ByID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNote_ByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetNote_ByID(System.IAsyncResult result) {
            return base.Channel.EndGetNote_ByID(result);
        }
        
        private System.IAsyncResult OnBeginGetNote_ByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetNote_ByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetNote_ByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetNote_ByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNote_ByIDCompleted(object state) {
            if ((this.GetNote_ByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNote_ByIDCompleted(this, new GetNote_ByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNote_ByIDAsync(string id) {
            this.GetNote_ByIDAsync(id, null);
        }
        
        public void GetNote_ByIDAsync(string id, object userState) {
            if ((this.onBeginGetNote_ByIDDelegate == null)) {
                this.onBeginGetNote_ByIDDelegate = new BeginOperationDelegate(this.OnBeginGetNote_ByID);
            }
            if ((this.onEndGetNote_ByIDDelegate == null)) {
                this.onEndGetNote_ByIDDelegate = new EndOperationDelegate(this.OnEndGetNote_ByID);
            }
            if ((this.onGetNote_ByIDCompletedDelegate == null)) {
                this.onGetNote_ByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNote_ByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNote_ByIDDelegate, new object[] {
                        id}, this.onEndGetNote_ByIDDelegate, this.onGetNote_ByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNotes_ByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetNotes_ByIDs(System.IAsyncResult result) {
            return base.Channel.EndGetNotes_ByIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetNotes_ByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetNotes_ByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndGetNotes_ByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetNotes_ByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNotes_ByIDsCompleted(object state) {
            if ((this.GetNotes_ByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNotes_ByIDsCompleted(this, new GetNotes_ByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNotes_ByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.GetNotes_ByIDsAsync(ids, null);
        }
        
        public void GetNotes_ByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginGetNotes_ByIDsDelegate == null)) {
                this.onBeginGetNotes_ByIDsDelegate = new BeginOperationDelegate(this.OnBeginGetNotes_ByIDs);
            }
            if ((this.onEndGetNotes_ByIDsDelegate == null)) {
                this.onEndGetNotes_ByIDsDelegate = new EndOperationDelegate(this.OnEndGetNotes_ByIDs);
            }
            if ((this.onGetNotes_ByIDsCompletedDelegate == null)) {
                this.onGetNotes_ByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNotes_ByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNotes_ByIDsDelegate, new object[] {
                        ids}, this.onEndGetNotes_ByIDsDelegate, this.onGetNotes_ByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetNotes_ByUserID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNotes_ByUserID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetNotes_ByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetNotes_ByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetNotes_ByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetNotes_ByUserID(id, callback, asyncState);
        }
        
        private object[] OnEndGetNotes_ByUserID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetNotes_ByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNotes_ByUserIDCompleted(object state) {
            if ((this.GetNotes_ByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNotes_ByUserIDCompleted(this, new GetNotes_ByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNotes_ByUserIDAsync(string id) {
            this.GetNotes_ByUserIDAsync(id, null);
        }
        
        public void GetNotes_ByUserIDAsync(string id, object userState) {
            if ((this.onBeginGetNotes_ByUserIDDelegate == null)) {
                this.onBeginGetNotes_ByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetNotes_ByUserID);
            }
            if ((this.onEndGetNotes_ByUserIDDelegate == null)) {
                this.onEndGetNotes_ByUserIDDelegate = new EndOperationDelegate(this.OnEndGetNotes_ByUserID);
            }
            if ((this.onGetNotes_ByUserIDCompletedDelegate == null)) {
                this.onGetNotes_ByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNotes_ByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNotes_ByUserIDDelegate, new object[] {
                        id}, this.onEndGetNotes_ByUserIDDelegate, this.onGetNotes_ByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginUpdateNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNote(note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndUpdateNote(System.IAsyncResult result) {
            return base.Channel.EndUpdateNote(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginUpdateNote(note, callback, asyncState);
        }
        
        private object[] OnEndUpdateNote(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndUpdateNote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNoteCompleted(object state) {
            if ((this.UpdateNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNoteCompleted(this, new UpdateNoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNoteAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note) {
            this.UpdateNoteAsync(note, null);
        }
        
        public void UpdateNoteAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, object userState) {
            if ((this.onBeginUpdateNoteDelegate == null)) {
                this.onBeginUpdateNoteDelegate = new BeginOperationDelegate(this.OnBeginUpdateNote);
            }
            if ((this.onEndUpdateNoteDelegate == null)) {
                this.onEndUpdateNoteDelegate = new EndOperationDelegate(this.OnEndUpdateNote);
            }
            if ((this.onUpdateNoteCompletedDelegate == null)) {
                this.onUpdateNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNoteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNoteDelegate, new object[] {
                        note}, this.onEndUpdateNoteDelegate, this.onUpdateNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginUpdateNotes(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNotes(note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndUpdateNotes(System.IAsyncResult result) {
            return base.Channel.EndUpdateNotes(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginUpdateNotes(note, callback, asyncState);
        }
        
        private object[] OnEndUpdateNotes(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndUpdateNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNotesCompleted(object state) {
            if ((this.UpdateNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNotesCompleted(this, new UpdateNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNotesAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note) {
            this.UpdateNotesAsync(note, null);
        }
        
        public void UpdateNotesAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, object userState) {
            if ((this.onBeginUpdateNotesDelegate == null)) {
                this.onBeginUpdateNotesDelegate = new BeginOperationDelegate(this.OnBeginUpdateNotes);
            }
            if ((this.onEndUpdateNotesDelegate == null)) {
                this.onEndUpdateNotesDelegate = new EndOperationDelegate(this.OnEndUpdateNotes);
            }
            if ((this.onUpdateNotesCompletedDelegate == null)) {
                this.onUpdateNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNotesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNotesDelegate, new object[] {
                        note}, this.onEndUpdateNotesDelegate, this.onUpdateNotesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddPassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPassword(password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddPassword(System.IAsyncResult result) {
            return base.Channel.EndAddPassword(result);
        }
        
        private System.IAsyncResult OnBeginAddPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddPassword(password, callback, asyncState);
        }
        
        private object[] OnEndAddPassword(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPasswordCompleted(object state) {
            if ((this.AddPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPasswordCompleted(this, new AddPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPasswordAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password) {
            this.AddPasswordAsync(password, null);
        }
        
        public void AddPasswordAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, object userState) {
            if ((this.onBeginAddPasswordDelegate == null)) {
                this.onBeginAddPasswordDelegate = new BeginOperationDelegate(this.OnBeginAddPassword);
            }
            if ((this.onEndAddPasswordDelegate == null)) {
                this.onEndAddPasswordDelegate = new EndOperationDelegate(this.OnEndAddPassword);
            }
            if ((this.onAddPasswordCompletedDelegate == null)) {
                this.onAddPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginAddPasswordDelegate, new object[] {
                        password}, this.onEndAddPasswordDelegate, this.onAddPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDeletePassword_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePassword_ByID(id, user_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDeletePassword_ByID(System.IAsyncResult result) {
            return base.Channel.EndDeletePassword_ByID(result);
        }
        
        private System.IAsyncResult OnBeginDeletePassword_ByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string user_id = ((string)(inValues[1]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDeletePassword_ByID(id, user_id, callback, asyncState);
        }
        
        private object[] OnEndDeletePassword_ByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDeletePassword_ByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePassword_ByIDCompleted(object state) {
            if ((this.DeletePassword_ByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePassword_ByIDCompleted(this, new DeletePassword_ByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePassword_ByIDAsync(string id, string user_id) {
            this.DeletePassword_ByIDAsync(id, user_id, null);
        }
        
        public void DeletePassword_ByIDAsync(string id, string user_id, object userState) {
            if ((this.onBeginDeletePassword_ByIDDelegate == null)) {
                this.onBeginDeletePassword_ByIDDelegate = new BeginOperationDelegate(this.OnBeginDeletePassword_ByID);
            }
            if ((this.onEndDeletePassword_ByIDDelegate == null)) {
                this.onEndDeletePassword_ByIDDelegate = new EndOperationDelegate(this.OnEndDeletePassword_ByID);
            }
            if ((this.onDeletePassword_ByIDCompletedDelegate == null)) {
                this.onDeletePassword_ByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePassword_ByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePassword_ByIDDelegate, new object[] {
                        id,
                        user_id}, this.onEndDeletePassword_ByIDDelegate, this.onDeletePassword_ByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDeletePasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePasswords_ByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDeletePasswords_ByIDs(System.IAsyncResult result) {
            return base.Channel.EndDeletePasswords_ByIDs(result);
        }
        
        private System.IAsyncResult OnBeginDeletePasswords_ByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDeletePasswords_ByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndDeletePasswords_ByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDeletePasswords_ByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePasswords_ByIDsCompleted(object state) {
            if ((this.DeletePasswords_ByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePasswords_ByIDsCompleted(this, new DeletePasswords_ByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePasswords_ByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.DeletePasswords_ByIDsAsync(ids, null);
        }
        
        public void DeletePasswords_ByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginDeletePasswords_ByIDsDelegate == null)) {
                this.onBeginDeletePasswords_ByIDsDelegate = new BeginOperationDelegate(this.OnBeginDeletePasswords_ByIDs);
            }
            if ((this.onEndDeletePasswords_ByIDsDelegate == null)) {
                this.onEndDeletePasswords_ByIDsDelegate = new EndOperationDelegate(this.OnEndDeletePasswords_ByIDs);
            }
            if ((this.onDeletePasswords_ByIDsCompletedDelegate == null)) {
                this.onDeletePasswords_ByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePasswords_ByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePasswords_ByIDsDelegate, new object[] {
                        ids}, this.onEndDeletePasswords_ByIDsDelegate, this.onDeletePasswords_ByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginUpdatePassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePassword(password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndUpdatePassword(System.IAsyncResult result) {
            return base.Channel.EndUpdatePassword(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginUpdatePassword(password, callback, asyncState);
        }
        
        private object[] OnEndUpdatePassword(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndUpdatePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePasswordCompleted(object state) {
            if ((this.UpdatePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePasswordAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password) {
            this.UpdatePasswordAsync(password, null);
        }
        
        public void UpdatePasswordAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, object userState) {
            if ((this.onBeginUpdatePasswordDelegate == null)) {
                this.onBeginUpdatePasswordDelegate = new BeginOperationDelegate(this.OnBeginUpdatePassword);
            }
            if ((this.onEndUpdatePasswordDelegate == null)) {
                this.onEndUpdatePasswordDelegate = new EndOperationDelegate(this.OnEndUpdatePassword);
            }
            if ((this.onUpdatePasswordCompletedDelegate == null)) {
                this.onUpdatePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePasswordDelegate, new object[] {
                        password}, this.onEndUpdatePasswordDelegate, this.onUpdatePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetPasswords_ByUserID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPasswords_ByUserID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetPasswords_ByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetPasswords_ByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetPasswords_ByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetPasswords_ByUserID(id, callback, asyncState);
        }
        
        private object[] OnEndGetPasswords_ByUserID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetPasswords_ByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPasswords_ByUserIDCompleted(object state) {
            if ((this.GetPasswords_ByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPasswords_ByUserIDCompleted(this, new GetPasswords_ByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPasswords_ByUserIDAsync(string id) {
            this.GetPasswords_ByUserIDAsync(id, null);
        }
        
        public void GetPasswords_ByUserIDAsync(string id, object userState) {
            if ((this.onBeginGetPasswords_ByUserIDDelegate == null)) {
                this.onBeginGetPasswords_ByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetPasswords_ByUserID);
            }
            if ((this.onEndGetPasswords_ByUserIDDelegate == null)) {
                this.onEndGetPasswords_ByUserIDDelegate = new EndOperationDelegate(this.OnEndGetPasswords_ByUserID);
            }
            if ((this.onGetPasswords_ByUserIDCompletedDelegate == null)) {
                this.onGetPasswords_ByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPasswords_ByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPasswords_ByUserIDDelegate, new object[] {
                        id}, this.onEndGetPasswords_ByUserIDDelegate, this.onGetPasswords_ByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetPassword_ByID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPassword_ByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetPassword_ByID(System.IAsyncResult result) {
            return base.Channel.EndGetPassword_ByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPassword_ByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetPassword_ByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetPassword_ByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetPassword_ByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPassword_ByIDCompleted(object state) {
            if ((this.GetPassword_ByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPassword_ByIDCompleted(this, new GetPassword_ByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPassword_ByIDAsync(string id) {
            this.GetPassword_ByIDAsync(id, null);
        }
        
        public void GetPassword_ByIDAsync(string id, object userState) {
            if ((this.onBeginGetPassword_ByIDDelegate == null)) {
                this.onBeginGetPassword_ByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPassword_ByID);
            }
            if ((this.onEndGetPassword_ByIDDelegate == null)) {
                this.onEndGetPassword_ByIDDelegate = new EndOperationDelegate(this.OnEndGetPassword_ByID);
            }
            if ((this.onGetPassword_ByIDCompletedDelegate == null)) {
                this.onGetPassword_ByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPassword_ByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPassword_ByIDDelegate, new object[] {
                        id}, this.onEndGetPassword_ByIDDelegate, this.onGetPassword_ByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGetPasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPasswords_ByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGetPasswords_ByIDs(System.IAsyncResult result) {
            return base.Channel.EndGetPasswords_ByIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetPasswords_ByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGetPasswords_ByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndGetPasswords_ByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGetPasswords_ByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPasswords_ByIDsCompleted(object state) {
            if ((this.GetPasswords_ByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPasswords_ByIDsCompleted(this, new GetPasswords_ByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPasswords_ByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.GetPasswords_ByIDsAsync(ids, null);
        }
        
        public void GetPasswords_ByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginGetPasswords_ByIDsDelegate == null)) {
                this.onBeginGetPasswords_ByIDsDelegate = new BeginOperationDelegate(this.OnBeginGetPasswords_ByIDs);
            }
            if ((this.onEndGetPasswords_ByIDsDelegate == null)) {
                this.onEndGetPasswords_ByIDsDelegate = new EndOperationDelegate(this.OnEndGetPasswords_ByIDs);
            }
            if ((this.onGetPasswords_ByIDsCompletedDelegate == null)) {
                this.onGetPasswords_ByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPasswords_ByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPasswords_ByIDsDelegate, new object[] {
                        ids}, this.onEndGetPasswords_ByIDsDelegate, this.onGetPasswords_ByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddAccount(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAccount(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddAccount(System.IAsyncResult result) {
            return base.Channel.EndAddAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddAccount(account, callback, asyncState);
        }
        
        private object[] OnEndAddAccount(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAccountCompleted(object state) {
            if ((this.AddAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAccountCompleted(this, new AddAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAccountAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account) {
            this.AddAccountAsync(account, null);
        }
        
        public void AddAccountAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account, object userState) {
            if ((this.onBeginAddAccountDelegate == null)) {
                this.onBeginAddAccountDelegate = new BeginOperationDelegate(this.OnBeginAddAccount);
            }
            if ((this.onEndAddAccountDelegate == null)) {
                this.onEndAddAccountDelegate = new EndOperationDelegate(this.OnEndAddAccount);
            }
            if ((this.onAddAccountCompletedDelegate == null)) {
                this.onAddAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddAccountDelegate, new object[] {
                        account}, this.onEndAddAccountDelegate, this.onAddAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_Account_ViaAuthentication(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_Account_ViaAuthentication(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_Account_ViaAuthentication(System.IAsyncResult result) {
            return base.Channel.EndGet_Account_ViaAuthentication(result);
        }
        
        private System.IAsyncResult OnBeginGet_Account_ViaAuthentication(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_Account_ViaAuthentication(username, password, callback, asyncState);
        }
        
        private object[] OnEndGet_Account_ViaAuthentication(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_Account_ViaAuthentication(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_Account_ViaAuthenticationCompleted(object state) {
            if ((this.Get_Account_ViaAuthenticationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_Account_ViaAuthenticationCompleted(this, new Get_Account_ViaAuthenticationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_Account_ViaAuthenticationAsync(string username, string password) {
            this.Get_Account_ViaAuthenticationAsync(username, password, null);
        }
        
        public void Get_Account_ViaAuthenticationAsync(string username, string password, object userState) {
            if ((this.onBeginGet_Account_ViaAuthenticationDelegate == null)) {
                this.onBeginGet_Account_ViaAuthenticationDelegate = new BeginOperationDelegate(this.OnBeginGet_Account_ViaAuthentication);
            }
            if ((this.onEndGet_Account_ViaAuthenticationDelegate == null)) {
                this.onEndGet_Account_ViaAuthenticationDelegate = new EndOperationDelegate(this.OnEndGet_Account_ViaAuthentication);
            }
            if ((this.onGet_Account_ViaAuthenticationCompletedDelegate == null)) {
                this.onGet_Account_ViaAuthenticationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_Account_ViaAuthenticationCompleted);
            }
            base.InvokeAsync(this.onBeginGet_Account_ViaAuthenticationDelegate, new object[] {
                        username,
                        password}, this.onEndGet_Account_ViaAuthenticationDelegate, this.onGet_Account_ViaAuthenticationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddContact(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddContact(contact, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddContact(System.IAsyncResult result) {
            return base.Channel.EndAddContact(result);
        }
        
        private System.IAsyncResult OnBeginAddContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddContact(contact, callback, asyncState);
        }
        
        private object[] OnEndAddContact(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddContactCompleted(object state) {
            if ((this.AddContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddContactCompleted(this, new AddContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddContactAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact) {
            this.AddContactAsync(contact, null);
        }
        
        public void AddContactAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact, object userState) {
            if ((this.onBeginAddContactDelegate == null)) {
                this.onBeginAddContactDelegate = new BeginOperationDelegate(this.OnBeginAddContact);
            }
            if ((this.onEndAddContactDelegate == null)) {
                this.onEndAddContactDelegate = new EndOperationDelegate(this.OnEndAddContact);
            }
            if ((this.onAddContactCompletedDelegate == null)) {
                this.onAddContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddContactCompleted);
            }
            base.InvokeAsync(this.onBeginAddContactDelegate, new object[] {
                        contact}, this.onEndAddContactDelegate, this.onAddContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDelete_ContactByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete_ContactByID(id, user_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDelete_ContactByID(System.IAsyncResult result) {
            return base.Channel.EndDelete_ContactByID(result);
        }
        
        private System.IAsyncResult OnBeginDelete_ContactByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string user_id = ((string)(inValues[1]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDelete_ContactByID(id, user_id, callback, asyncState);
        }
        
        private object[] OnEndDelete_ContactByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDelete_ContactByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelete_ContactByIDCompleted(object state) {
            if ((this.Delete_ContactByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Delete_ContactByIDCompleted(this, new Delete_ContactByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Delete_ContactByIDAsync(string id, string user_id) {
            this.Delete_ContactByIDAsync(id, user_id, null);
        }
        
        public void Delete_ContactByIDAsync(string id, string user_id, object userState) {
            if ((this.onBeginDelete_ContactByIDDelegate == null)) {
                this.onBeginDelete_ContactByIDDelegate = new BeginOperationDelegate(this.OnBeginDelete_ContactByID);
            }
            if ((this.onEndDelete_ContactByIDDelegate == null)) {
                this.onEndDelete_ContactByIDDelegate = new EndOperationDelegate(this.OnEndDelete_ContactByID);
            }
            if ((this.onDelete_ContactByIDCompletedDelegate == null)) {
                this.onDelete_ContactByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelete_ContactByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDelete_ContactByIDDelegate, new object[] {
                        id,
                        user_id}, this.onEndDelete_ContactByIDDelegate, this.onDelete_ContactByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDelete_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete_ContactsByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDelete_ContactsByIDs(System.IAsyncResult result) {
            return base.Channel.EndDelete_ContactsByIDs(result);
        }
        
        private System.IAsyncResult OnBeginDelete_ContactsByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDelete_ContactsByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndDelete_ContactsByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDelete_ContactsByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelete_ContactsByIDsCompleted(object state) {
            if ((this.Delete_ContactsByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Delete_ContactsByIDsCompleted(this, new Delete_ContactsByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Delete_ContactsByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.Delete_ContactsByIDsAsync(ids, null);
        }
        
        public void Delete_ContactsByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginDelete_ContactsByIDsDelegate == null)) {
                this.onBeginDelete_ContactsByIDsDelegate = new BeginOperationDelegate(this.OnBeginDelete_ContactsByIDs);
            }
            if ((this.onEndDelete_ContactsByIDsDelegate == null)) {
                this.onEndDelete_ContactsByIDsDelegate = new EndOperationDelegate(this.OnEndDelete_ContactsByIDs);
            }
            if ((this.onDelete_ContactsByIDsCompletedDelegate == null)) {
                this.onDelete_ContactsByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelete_ContactsByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginDelete_ContactsByIDsDelegate, new object[] {
                        ids}, this.onEndDelete_ContactsByIDsDelegate, this.onDelete_ContactsByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_ContactByID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_ContactByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_ContactByID(System.IAsyncResult result) {
            return base.Channel.EndGet_ContactByID(result);
        }
        
        private System.IAsyncResult OnBeginGet_ContactByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_ContactByID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_ContactByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_ContactByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_ContactByIDCompleted(object state) {
            if ((this.Get_ContactByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_ContactByIDCompleted(this, new Get_ContactByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_ContactByIDAsync(string id) {
            this.Get_ContactByIDAsync(id, null);
        }
        
        public void Get_ContactByIDAsync(string id, object userState) {
            if ((this.onBeginGet_ContactByIDDelegate == null)) {
                this.onBeginGet_ContactByIDDelegate = new BeginOperationDelegate(this.OnBeginGet_ContactByID);
            }
            if ((this.onEndGet_ContactByIDDelegate == null)) {
                this.onEndGet_ContactByIDDelegate = new EndOperationDelegate(this.OnEndGet_ContactByID);
            }
            if ((this.onGet_ContactByIDCompletedDelegate == null)) {
                this.onGet_ContactByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_ContactByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_ContactByIDDelegate, new object[] {
                        id}, this.onEndGet_ContactByIDDelegate, this.onGet_ContactByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_ContactsByUserID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_ContactsByUserID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_ContactsByUserID(System.IAsyncResult result) {
            return base.Channel.EndGet_ContactsByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGet_ContactsByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_ContactsByUserID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_ContactsByUserID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_ContactsByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_ContactsByUserIDCompleted(object state) {
            if ((this.Get_ContactsByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_ContactsByUserIDCompleted(this, new Get_ContactsByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_ContactsByUserIDAsync(string id) {
            this.Get_ContactsByUserIDAsync(id, null);
        }
        
        public void Get_ContactsByUserIDAsync(string id, object userState) {
            if ((this.onBeginGet_ContactsByUserIDDelegate == null)) {
                this.onBeginGet_ContactsByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGet_ContactsByUserID);
            }
            if ((this.onEndGet_ContactsByUserIDDelegate == null)) {
                this.onEndGet_ContactsByUserIDDelegate = new EndOperationDelegate(this.OnEndGet_ContactsByUserID);
            }
            if ((this.onGet_ContactsByUserIDCompletedDelegate == null)) {
                this.onGet_ContactsByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_ContactsByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_ContactsByUserIDDelegate, new object[] {
                        id}, this.onEndGet_ContactsByUserIDDelegate, this.onGet_ContactsByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_ContactsByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_ContactsByIDs(System.IAsyncResult result) {
            return base.Channel.EndGet_ContactsByIDs(result);
        }
        
        private System.IAsyncResult OnBeginGet_ContactsByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_ContactsByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndGet_ContactsByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_ContactsByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_ContactsByIDsCompleted(object state) {
            if ((this.Get_ContactsByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_ContactsByIDsCompleted(this, new Get_ContactsByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_ContactsByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.Get_ContactsByIDsAsync(ids, null);
        }
        
        public void Get_ContactsByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginGet_ContactsByIDsDelegate == null)) {
                this.onBeginGet_ContactsByIDsDelegate = new BeginOperationDelegate(this.OnBeginGet_ContactsByIDs);
            }
            if ((this.onEndGet_ContactsByIDsDelegate == null)) {
                this.onEndGet_ContactsByIDsDelegate = new EndOperationDelegate(this.OnEndGet_ContactsByIDs);
            }
            if ((this.onGet_ContactsByIDsCompletedDelegate == null)) {
                this.onGet_ContactsByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_ContactsByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGet_ContactsByIDsDelegate, new object[] {
                        ids}, this.onEndGet_ContactsByIDsDelegate, this.onGet_ContactsByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddMusic(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddMusic(music, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddMusic(System.IAsyncResult result) {
            return base.Channel.EndAddMusic(result);
        }
        
        private System.IAsyncResult OnBeginAddMusic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddMusic(music, callback, asyncState);
        }
        
        private object[] OnEndAddMusic(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddMusic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddMusicCompleted(object state) {
            if ((this.AddMusicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddMusicCompleted(this, new AddMusicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddMusicAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music) {
            this.AddMusicAsync(music, null);
        }
        
        public void AddMusicAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music, object userState) {
            if ((this.onBeginAddMusicDelegate == null)) {
                this.onBeginAddMusicDelegate = new BeginOperationDelegate(this.OnBeginAddMusic);
            }
            if ((this.onEndAddMusicDelegate == null)) {
                this.onEndAddMusicDelegate = new EndOperationDelegate(this.OnEndAddMusic);
            }
            if ((this.onAddMusicCompletedDelegate == null)) {
                this.onAddMusicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddMusicCompleted);
            }
            base.InvokeAsync(this.onBeginAddMusicDelegate, new object[] {
                        music}, this.onEndAddMusicDelegate, this.onAddMusicCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_MusicByID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_MusicByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_MusicByID(System.IAsyncResult result) {
            return base.Channel.EndGet_MusicByID(result);
        }
        
        private System.IAsyncResult OnBeginGet_MusicByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_MusicByID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_MusicByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_MusicByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_MusicByIDCompleted(object state) {
            if ((this.Get_MusicByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_MusicByIDCompleted(this, new Get_MusicByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_MusicByIDAsync(string id) {
            this.Get_MusicByIDAsync(id, null);
        }
        
        public void Get_MusicByIDAsync(string id, object userState) {
            if ((this.onBeginGet_MusicByIDDelegate == null)) {
                this.onBeginGet_MusicByIDDelegate = new BeginOperationDelegate(this.OnBeginGet_MusicByID);
            }
            if ((this.onEndGet_MusicByIDDelegate == null)) {
                this.onEndGet_MusicByIDDelegate = new EndOperationDelegate(this.OnEndGet_MusicByID);
            }
            if ((this.onGet_MusicByIDCompletedDelegate == null)) {
                this.onGet_MusicByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_MusicByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_MusicByIDDelegate, new object[] {
                        id}, this.onEndGet_MusicByIDDelegate, this.onGet_MusicByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_MusicByUserID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_MusicByUserID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_MusicByUserID(System.IAsyncResult result) {
            return base.Channel.EndGet_MusicByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGet_MusicByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_MusicByUserID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_MusicByUserID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_MusicByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_MusicByUserIDCompleted(object state) {
            if ((this.Get_MusicByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_MusicByUserIDCompleted(this, new Get_MusicByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_MusicByUserIDAsync(string id) {
            this.Get_MusicByUserIDAsync(id, null);
        }
        
        public void Get_MusicByUserIDAsync(string id, object userState) {
            if ((this.onBeginGet_MusicByUserIDDelegate == null)) {
                this.onBeginGet_MusicByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGet_MusicByUserID);
            }
            if ((this.onEndGet_MusicByUserIDDelegate == null)) {
                this.onEndGet_MusicByUserIDDelegate = new EndOperationDelegate(this.OnEndGet_MusicByUserID);
            }
            if ((this.onGet_MusicByUserIDCompletedDelegate == null)) {
                this.onGet_MusicByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_MusicByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_MusicByUserIDDelegate, new object[] {
                        id}, this.onEndGet_MusicByUserIDDelegate, this.onGet_MusicByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_MusicByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_MusicByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_MusicByIDs(System.IAsyncResult result) {
            return base.Channel.EndGet_MusicByIDs(result);
        }
        
        private System.IAsyncResult OnBeginGet_MusicByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_MusicByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndGet_MusicByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_MusicByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_MusicByIDsCompleted(object state) {
            if ((this.Get_MusicByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_MusicByIDsCompleted(this, new Get_MusicByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_MusicByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.Get_MusicByIDsAsync(ids, null);
        }
        
        public void Get_MusicByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginGet_MusicByIDsDelegate == null)) {
                this.onBeginGet_MusicByIDsDelegate = new BeginOperationDelegate(this.OnBeginGet_MusicByIDs);
            }
            if ((this.onEndGet_MusicByIDsDelegate == null)) {
                this.onEndGet_MusicByIDsDelegate = new EndOperationDelegate(this.OnEndGet_MusicByIDs);
            }
            if ((this.onGet_MusicByIDsCompletedDelegate == null)) {
                this.onGet_MusicByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_MusicByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGet_MusicByIDsDelegate, new object[] {
                        ids}, this.onEndGet_MusicByIDsDelegate, this.onGet_MusicByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginAddPhoto(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPhoto(photo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndAddPhoto(System.IAsyncResult result) {
            return base.Channel.EndAddPhoto(result);
        }
        
        private System.IAsyncResult OnBeginAddPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginAddPhoto(photo, callback, asyncState);
        }
        
        private object[] OnEndAddPhoto(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndAddPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPhotoCompleted(object state) {
            if ((this.AddPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPhotoCompleted(this, new AddPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPhotoAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo) {
            this.AddPhotoAsync(photo, null);
        }
        
        public void AddPhotoAsync(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo, object userState) {
            if ((this.onBeginAddPhotoDelegate == null)) {
                this.onBeginAddPhotoDelegate = new BeginOperationDelegate(this.OnBeginAddPhoto);
            }
            if ((this.onEndAddPhotoDelegate == null)) {
                this.onEndAddPhotoDelegate = new EndOperationDelegate(this.OnEndAddPhoto);
            }
            if ((this.onAddPhotoCompletedDelegate == null)) {
                this.onAddPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginAddPhotoDelegate, new object[] {
                        photo}, this.onEndAddPhotoDelegate, this.onAddPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDelete_PhotoByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete_PhotoByID(id, user_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDelete_PhotoByID(System.IAsyncResult result) {
            return base.Channel.EndDelete_PhotoByID(result);
        }
        
        private System.IAsyncResult OnBeginDelete_PhotoByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string user_id = ((string)(inValues[1]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDelete_PhotoByID(id, user_id, callback, asyncState);
        }
        
        private object[] OnEndDelete_PhotoByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDelete_PhotoByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelete_PhotoByIDCompleted(object state) {
            if ((this.Delete_PhotoByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Delete_PhotoByIDCompleted(this, new Delete_PhotoByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Delete_PhotoByIDAsync(string id, string user_id) {
            this.Delete_PhotoByIDAsync(id, user_id, null);
        }
        
        public void Delete_PhotoByIDAsync(string id, string user_id, object userState) {
            if ((this.onBeginDelete_PhotoByIDDelegate == null)) {
                this.onBeginDelete_PhotoByIDDelegate = new BeginOperationDelegate(this.OnBeginDelete_PhotoByID);
            }
            if ((this.onEndDelete_PhotoByIDDelegate == null)) {
                this.onEndDelete_PhotoByIDDelegate = new EndOperationDelegate(this.OnEndDelete_PhotoByID);
            }
            if ((this.onDelete_PhotoByIDCompletedDelegate == null)) {
                this.onDelete_PhotoByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelete_PhotoByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDelete_PhotoByIDDelegate, new object[] {
                        id,
                        user_id}, this.onEndDelete_PhotoByIDDelegate, this.onDelete_PhotoByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginDelete_PhotosByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete_PhotosByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndDelete_PhotosByIDs(System.IAsyncResult result) {
            return base.Channel.EndDelete_PhotosByIDs(result);
        }
        
        private System.IAsyncResult OnBeginDelete_PhotosByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginDelete_PhotosByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndDelete_PhotosByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndDelete_PhotosByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelete_PhotosByIDsCompleted(object state) {
            if ((this.Delete_PhotosByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Delete_PhotosByIDsCompleted(this, new Delete_PhotosByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Delete_PhotosByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.Delete_PhotosByIDsAsync(ids, null);
        }
        
        public void Delete_PhotosByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginDelete_PhotosByIDsDelegate == null)) {
                this.onBeginDelete_PhotosByIDsDelegate = new BeginOperationDelegate(this.OnBeginDelete_PhotosByIDs);
            }
            if ((this.onEndDelete_PhotosByIDsDelegate == null)) {
                this.onEndDelete_PhotosByIDsDelegate = new EndOperationDelegate(this.OnEndDelete_PhotosByIDs);
            }
            if ((this.onDelete_PhotosByIDsCompletedDelegate == null)) {
                this.onDelete_PhotosByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelete_PhotosByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginDelete_PhotosByIDsDelegate, new object[] {
                        ids}, this.onEndDelete_PhotosByIDsDelegate, this.onDelete_PhotosByIDsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_PhotoByID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_PhotoByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_PhotoByID(System.IAsyncResult result) {
            return base.Channel.EndGet_PhotoByID(result);
        }
        
        private System.IAsyncResult OnBeginGet_PhotoByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_PhotoByID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_PhotoByID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_PhotoByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_PhotoByIDCompleted(object state) {
            if ((this.Get_PhotoByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_PhotoByIDCompleted(this, new Get_PhotoByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_PhotoByIDAsync(string id) {
            this.Get_PhotoByIDAsync(id, null);
        }
        
        public void Get_PhotoByIDAsync(string id, object userState) {
            if ((this.onBeginGet_PhotoByIDDelegate == null)) {
                this.onBeginGet_PhotoByIDDelegate = new BeginOperationDelegate(this.OnBeginGet_PhotoByID);
            }
            if ((this.onEndGet_PhotoByIDDelegate == null)) {
                this.onEndGet_PhotoByIDDelegate = new EndOperationDelegate(this.OnEndGet_PhotoByID);
            }
            if ((this.onGet_PhotoByIDCompletedDelegate == null)) {
                this.onGet_PhotoByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_PhotoByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_PhotoByIDDelegate, new object[] {
                        id}, this.onEndGet_PhotoByIDDelegate, this.onGet_PhotoByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_PhotoByUserID(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_PhotoByUserID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_PhotoByUserID(System.IAsyncResult result) {
            return base.Channel.EndGet_PhotoByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGet_PhotoByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_PhotoByUserID(id, callback, asyncState);
        }
        
        private object[] OnEndGet_PhotoByUserID(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_PhotoByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_PhotoByUserIDCompleted(object state) {
            if ((this.Get_PhotoByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_PhotoByUserIDCompleted(this, new Get_PhotoByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_PhotoByUserIDAsync(string id) {
            this.Get_PhotoByUserIDAsync(id, null);
        }
        
        public void Get_PhotoByUserIDAsync(string id, object userState) {
            if ((this.onBeginGet_PhotoByUserIDDelegate == null)) {
                this.onBeginGet_PhotoByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGet_PhotoByUserID);
            }
            if ((this.onEndGet_PhotoByUserIDDelegate == null)) {
                this.onEndGet_PhotoByUserIDDelegate = new EndOperationDelegate(this.OnEndGet_PhotoByUserID);
            }
            if ((this.onGet_PhotoByUserIDCompletedDelegate == null)) {
                this.onGet_PhotoByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_PhotoByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGet_PhotoByUserIDDelegate, new object[] {
                        id}, this.onEndGet_PhotoByUserIDDelegate, this.onGet_PhotoByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.BeginGet_PhotoByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_PhotoByIDs(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService.EndGet_PhotoByIDs(System.IAsyncResult result) {
            return base.Channel.EndGet_PhotoByIDs(result);
        }
        
        private System.IAsyncResult OnBeginGet_PhotoByIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> ids = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).BeginGet_PhotoByIDs(ids, callback, asyncState);
        }
        
        private object[] OnEndGet_PhotoByIDs(System.IAsyncResult result) {
            Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket retVal = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService)(this)).EndGet_PhotoByIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_PhotoByIDsCompleted(object state) {
            if ((this.Get_PhotoByIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_PhotoByIDsCompleted(this, new Get_PhotoByIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_PhotoByIDsAsync(System.Collections.Generic.List<string> ids) {
            this.Get_PhotoByIDsAsync(ids, null);
        }
        
        public void Get_PhotoByIDsAsync(System.Collections.Generic.List<string> ids, object userState) {
            if ((this.onBeginGet_PhotoByIDsDelegate == null)) {
                this.onBeginGet_PhotoByIDsDelegate = new BeginOperationDelegate(this.OnBeginGet_PhotoByIDs);
            }
            if ((this.onEndGet_PhotoByIDsDelegate == null)) {
                this.onEndGet_PhotoByIDsDelegate = new EndOperationDelegate(this.OnEndGet_PhotoByIDs);
            }
            if ((this.onGet_PhotoByIDsCompletedDelegate == null)) {
                this.onGet_PhotoByIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_PhotoByIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGet_PhotoByIDsDelegate, new object[] {
                        ids}, this.onEndGet_PhotoByIDsDelegate, this.onGet_PhotoByIDsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService CreateChannel() {
            return new DataVaultServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataVaultService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataVaultService)) {
                return new System.ServiceModel.EndpointAddress("https://desktop-5qtoe01/DataVaultService/DataVaultService_WCF.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return DataVaultServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDataVaultService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return DataVaultServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDataVaultService);
        }
        
        private class DataVaultServiceClientChannel : ChannelBase<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService>, Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService {
            
            public DataVaultServiceClientChannel(System.ServiceModel.ClientBase<Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IDataVaultService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIsServiceAvailable(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("IsServiceAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsServiceAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsServiceAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = note;
                System.IAsyncResult _result = base.BeginInvoke("AddNote", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddNote", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteNote_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = user_id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteNote_ByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeleteNote_ByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("DeleteNote_ByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("DeleteNotes_ByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeleteNotes_ByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("DeleteNotes_ByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNote_ByID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetNote_ByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNote_ByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(base.EndInvoke("GetNote_ByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNotes_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("GetNotes_ByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNotes_ByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(base.EndInvoke("GetNotes_ByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNotes_ByUserID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetNotes_ByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket EndGetNotes_ByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.NotesResponsePacket)(base.EndInvoke("GetNotes_ByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNote(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = note;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNote", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdateNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("UpdateNote", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNotes(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Notes note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = note;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNotes", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdateNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("UpdateNotes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = password;
                System.IAsyncResult _result = base.BeginInvoke("AddPassword", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePassword_ByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = user_id;
                System.IAsyncResult _result = base.BeginInvoke("DeletePassword_ByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeletePassword_ByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("DeletePassword_ByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("DeletePasswords_ByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDeletePasswords_ByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("DeletePasswords_ByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePassword(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Passwords password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = password;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePassword", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndUpdatePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("UpdatePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPasswords_ByUserID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPasswords_ByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPasswords_ByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(base.EndInvoke("GetPasswords_ByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPassword_ByID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPassword_ByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPassword_ByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(base.EndInvoke("GetPassword_ByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPasswords_ByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("GetPasswords_ByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket EndGetPasswords_ByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PasswordsResponsePacket)(base.EndInvoke("GetPasswords_ByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddAccount(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Account account, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = account;
                System.IAsyncResult _result = base.BeginInvoke("AddAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_Account_ViaAuthentication(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Get_Account_ViaAuthentication", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket EndGet_Account_ViaAuthentication(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.AccountResponsePacket)(base.EndInvoke("Get_Account_ViaAuthentication", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddContact(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Contacts contact, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contact;
                System.IAsyncResult _result = base.BeginInvoke("AddContact", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete_ContactByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = user_id;
                System.IAsyncResult _result = base.BeginInvoke("Delete_ContactByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_ContactByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("Delete_ContactByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("Delete_ContactsByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_ContactsByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("Delete_ContactsByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_ContactByID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_ContactByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(base.EndInvoke("Get_ContactByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_ContactsByUserID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_ContactsByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactsByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(base.EndInvoke("Get_ContactsByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_ContactsByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("Get_ContactsByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket EndGet_ContactsByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.ContactsResponsePacket)(base.EndInvoke("Get_ContactsByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddMusic(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Music music, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = music;
                System.IAsyncResult _result = base.BeginInvoke("AddMusic", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddMusic(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddMusic", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_MusicByID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_MusicByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(base.EndInvoke("Get_MusicByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_MusicByUserID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_MusicByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(base.EndInvoke("Get_MusicByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_MusicByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("Get_MusicByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket EndGet_MusicByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.MusicResponsePacket)(base.EndInvoke("Get_MusicByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPhoto(Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.Photos photo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = photo;
                System.IAsyncResult _result = base.BeginInvoke("AddPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndAddPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("AddPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete_PhotoByID(string id, string user_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = user_id;
                System.IAsyncResult _result = base.BeginInvoke("Delete_PhotoByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_PhotoByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("Delete_PhotoByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete_PhotosByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("Delete_PhotosByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket EndDelete_PhotosByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.IdentityPacket)(base.EndInvoke("Delete_PhotosByIDs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_PhotoByID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_PhotoByID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(base.EndInvoke("Get_PhotoByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_PhotoByUserID(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_PhotoByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(base.EndInvoke("Get_PhotoByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_PhotoByIDs(System.Collections.Generic.List<string> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("Get_PhotoByIDs", _args, callback, asyncState);
                return _result;
            }
            
            public Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket EndGet_PhotoByIDs(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket _result = ((Cross.DataVault.ServiceAccess.PCL.DataVaultCloudService.PhotosResponsePacket)(base.EndInvoke("Get_PhotoByIDs", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IDataVaultService,
        }
    }
}
